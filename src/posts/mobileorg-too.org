#+TITLE: MobileOrg:Too [2017-08-04 Fri] 

** TL;DR
/somecrapo/

---------
Like any computer nerd wuth his salt I have a healty preoccupation with
procductivity tools. A couple of years ago I proposed to emacs and emacs said
'yes'. We were married in the fall of 2015. How we met, after my years of
disollutionment with my other prospects, how I fell in love and chose to commit
is a dtory for another day. Suffice it to say that my ongoing short-medium term
goal is to continue to place as puch of my personal experiance as I can (and i
practical) into emacs' very capapble hands.

It's almost impossible to conceive of a personal productivity system without the
employment of a list of todos. Emacs' org-mode is an environment well suited for
this task. Noteably, it frees me from any vendor locked-in file formats, it's
highly extensible, ..... some other reasons .... I use org-habits for habit
tracking and org-agenda to get various views and filters applied onto my list of
todos. Nothing too complicated, a system heavily inspired by David Allens GTD
but on a platform with nigh infinite extensibility if/when necessary in the
future to either capture new (types) of todos or associated infos and/or to
process the accumulation of completed todos and logs to gain further insight
into the effectiveness of the system.

One problem though is that the experience is mor ot less locked down to my
laptop. Were it convenient I would fun emacs on my phone(and I still might) but
in the meanitime I've been faced with a deisruption in my productivity workflow
particularly around capturing todos/notes on the fly, logging habits in
realtime, andviewing my daily agenda on the go.

The only system that ever worked for me in that regards was when years ago I
would keep my GTD system in a GTDTiddlyWiki and periodically hardprint the
system into a stack of index cards I could keep in my back pocket. Worked great
until I lost that stack of index cards enough times so as to loose the
pyschological benifits of the system.

I'm aware of mobileOrg and have tried to us it with my personal system. Glossing
over my megalomania eith regard to my personl computing environment, I found
that mobileOrg seems to aim to be a more general _org_-mode solution whereas my
worflow relies heavily on org-capture, org-habits, and org-agenda. After
probably like a decade of search for a workable coputer baded integrated
sesktop + mobile solution, including a couplt of years trying different iOS text
editing apps to serv as the mobile component, I have commited to creatinf a
slotion to satisfy my needs.

MobileOrg:Too

Speaking of megalomania; when I drive, I like to drive stick, when I compute I
like to run Linux. Heretofore I've been /a little/ clased out of iOS
development. The equaltion of my intrerest in developing for that platform
divided by the barrier to entry until recently was greater than wahat I was
willing to ghet into. React->React-Native->Exponent has really opened the door
to exploring the development of application for mobile platforms without the
need of a local XCode enabled environment neither and Apple Develeoper
crendential(at least for initial phases). Using these tools, I've recently
acheived a very MVP inititial version of the app and having done so am commiting
to documenting somt of the progress of the development of this application here.

*something something, list of features, expositioned in the order most likely
visited in app:*

- Dropbox login
  - using WebView to hit dropbox auth target url, not currently saving the auth
    token between sessions but might still in the future.
- Home Screen
  - Lists the contents of the chosen 'inbox' org file (as described in settings below.
  - provides a button to add a new blank todo entry which is inserted as the
    last top-level headline of the inbox file
  - provides ability to press an element headline to view/edit element details
  - provides ability to expand/collapse display of an entries children much like
    the use of the <TAB> key in emacs org-mode proper.
  - details screen also activated/naviagated to when new node is created
- Details screen
  - split into two sections:
  - details proper
    - Todo keyword.  The pressing of which deploys a popup to add/edit/remove current headline keyword
    - the entry headline, edited through inputText
    - a section containg the various timestamps (scheduled, deadline, and a
      personally defined 'opened' which may be removed in the future)
      - allows definintion of date with native datepicker
      - allows ability to define the timestamp repeat interval
      - also ability to clear the timestamp definition entirely
    - a section containing the elements of the entries prop drawer if any
      - allows for CRUD operations on the key value pairs in the prop drawer, however:
      - disallows re-description of the key once that has been set
    - a section containg the various logbook items
      - at the moment assumes each log enry will either be the logging of a
        state transition, or a log-note as defined through the C-c C-z workflow
      - allows CRUD operations on the later type of entry, the state transition
        log entries are read-only but otherwise deletable
    - editable textfield containg the body text
  - lower scrollview which displays the focused entries children in a list/tree
    re-using components from the Home Screen
- Calendar Screen
  - also split into two sections:
  - Agenda View
    - lists, in chronological order, todos (currently only with "scheduled"
      properties) against a couple of delimeters for selcted hours of the day,
      including 'now' (essentially recreating org-agendas 2day agenda view in
      app)
  - Habits
    - displays a 21 day habit graph
    - pressign on an item registers that Item as having been completed
      - inserts a state transition log entry in the associated todo
      - also advances the 'scheduled' and 'last reapeat' timestamps for the
        entry, respecting the repeat interval definition of the habit
- Settings Screen
  - Choice of inbox.org file
    - validates that path can be found and that path is a file on inputText blur
    - using _____ to store user preference   
  - Dropbox uploading 
  - "parsing" of (subset) org text documetn into a custom JS object based representation
  - later serialization of or JS object stucture back to plain text org file
    - at the moment of this writing, enforces some perhaps non-standard
      endentation rules, this may change

As MVP there is a massive room for improvments. The UX fundamentally sucks right
now, it is way too easy to accedently delete things in general. The tect may be
too small in general. Esential parts of the UI can be problematically obsured by
the keyboard. It's not very pretty to look at (outside or inside for that
matter). It should bne noted that this project is aslo an excuss foe a training
opportunity, encoorportaind some pracrtical knowledge of React-Native and redux
into my repertoir. They say computer progrtamming is the 'wicked problem... as
such I my scrap the current codebase as pure prototype and rearchitect the thing
from the ground up encoorportaing the learning both technical and intentional
from this most recent experience. Then again I may just refactor. I probly need
to live with this MVP foe a ehile to stir ip the deeper insights with regars to
my particular uses-case as eell as a larger term intenton to generalize thie
sysstem a bit to gopefully mak it useful to otheres. But in the mean time here
is a list of other shit I know I want ot change/improve/augment:

- Ability to specify multiple org files to load from dropbox
- Improve UX and UI
- Better, more mindfull sync between entries in orgfiles on dropbox and the state in the app
- Adding ability to CRUD on todo entry tags 

If you want to check it out find the published project on expo __here__. Upon
openning you'll be asked to log into drop box (we don't save passowrds or
tokens, yet). Asked to give mobile orgToo access to your dropbox account. You'll
then be asked for an inbox orgfile relative to your drobox root. ( I have an
'org' directory at the root of my dropbox folder where I keep my org files so I
enter '/org/inbox.org' where 'inbox.org' is an actual org file in that
directory). If everything goes well, the inbox inputText should be bordered in
green and the app will have loaded your inbox org entries. Constructive feedback
embraced.
